{% extends 'back.html.twig' %}

{% block css %}
    {{ parent() }} 
{% endblock %}

{% block title %}User index{% endblock %}

{% block body %}
    {{ parent() }} 

    <h1>User index</h1>

    <input type="text" id="searchInput" placeholder="Search by email">
    <div id="searchResults"></div> <!-- Container for search results -->

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Email</th>
                <th>IsVerified</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="usersTableBody">
            {% for user in users %}
                <tr>
                    <td>{{ user.id }}</td>
                    <td>{{ user.email }}</td>
                    <td>{{ user.isVerified ? 'Yes' : 'No' }}</td>
                    <td>
                        <div class="mt-3">
                            <a href="{{ path('app_user_show', {'id': user.id}) }}" class="btn btn-secondary">Show</a>
                        </div>
                        <div class="mt-3">
                            <a href="{{ path('app_user_edit', {'id': user.id}) }}" class="btn btn-secondary">Edit</a>
                        </div>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="4">No records found</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <a href="{{ path('app_user_new') }}">Create new</a>

<script>
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    const usersTableBody = document.getElementById('usersTableBody');

    searchInput.addEventListener('input', function() {
        const query = searchInput.value.trim();

        if (query.length === 0) {
            clearSearchResults();
            return;
        }

        fetch(`/user/search?q=${query}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error fetching search results');
                }
                return response.json();
            })
            .then(data => displaySearchResults(data))
            .catch(error => {
                console.error('Error:', error.message);
                displayError();
            });
    });

    function clearSearchResults() {
        searchResults.innerHTML = '';
        usersTableBody.style.display = 'table-row-group';
    }

    function displaySearchResults(data) {
        clearSearchResults();

        if (Array.isArray(data) && data.length > 0) {
            data.forEach(user => {
                searchResults.innerHTML += `<div>${user.id} - ${user.email}</div>`;
            });
            usersTableBody.style.display = 'none';
        } else {
            searchResults.innerHTML = 'No results found';
            usersTableBody.style.display = 'none';
        }
    }

    function displayError() {
        searchResults.innerHTML = 'Error fetching search results';
        usersTableBody.style.display = 'none';
    }
</script>

{% endblock %}
